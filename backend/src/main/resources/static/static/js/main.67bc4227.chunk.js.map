{"version":3,"sources":["components/Group.js","components/ReadedUsers.js","App.js","reportWebVitals.js","index.js"],"names":["beforeUpload","file","isJpgOrPng","type","message","error","isLt2M","size","Group","props","Form","useForm","form","useState","loading","setLoading","imageUrl","setImageUrl","uploadButton","LoadingOutlined","PlusOutlined","style","marginTop","onSubmit","a","userId","sessionStorage","getItem","validateFields","then","values","userIdList","messageUrl","title","text","name","picUrl","response","data","params","owner","dingTalkMessage","msgType","link","onClick","onClose","className","onFinish","Item","label","rules","required","placeholder","listType","showUploadList","action","onChange","info","status","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","originFileObj","overflow","src","alt","width","map","item","i","value","htmlType","ReadedUsers","columns","dataIndex","key","dataSource","readedUserList","App","showType","setShowType","setUserIdList","setReadedUserList","useEffect","dd","corpId","fetch","res","json","permission","requestAuthCode","onSuccess","axios","get","code","setItem","userid","unionid","deptIdList","success","qs","require","deptIds","paramsSerializer","stringify","arrayFormat","catch","alert","JSON","onFail","err","readUserList","console","log","url","method","headers","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67bc4227.chunk.js","sourcesContent":["import react, { useState } from \"react\"\nimport { Form, Input, Button, Checkbox, Upload, message } from \"antd\"\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\"\n\nfunction getBase64(img, callback) {\n  const reader = new FileReader()\n  reader.addEventListener(\"load\", () => callback(reader.result))\n  reader.readAsDataURL(img)\n}\n\nfunction beforeUpload(file) {\n  const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png'|| file.type === 'image/gif'|| file.type === 'image/bmp';\n  if (!isJpgOrPng) {\n    message.error('图片类型支持jpg/png/gif/bmp格式');\n  }\n  const isLt2M = file.size / 1024 / 1024 < 1;\n  if (!isLt2M) {\n    message.error('图片最大上传1M!');\n  }\n  return isJpgOrPng && isLt2M;\n}\n\nconst Group = (props) => {\n  const [form] = Form.useForm()\n\n  const [loading, setLoading] = useState(false)\n  const [imageUrl, setImageUrl] = useState(\"\")\n\n  const uploadButton = (\n    <div>\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\n      <div style={{ marginTop: 8 }}>Upload</div>\n    </div>\n  )\n  const handleChange = (info) => {\n    if (info.file.status === \"uploading\") {\n      setLoading(true)\n      return\n    }\n    if (info.file.status === \"done\") {\n      getBase64(info.file.originFileObj, (file) => {\n        setImageUrl(file)\n        setLoading(false)\n      })\n    }\n  }\n\n  const onSubmit = async () => {\n    const userId = sessionStorage.getItem(\"userId\")\n    await form.validateFields().then((values) => {\n      const { userIdList, messageUrl, title, text, file, name } = values\n      const picUrl = file?.file?.response?.data\n      const params = {\n        owner: userId,\n        name,\n        userIdList,\n        dingTalkMessage: {\n          msgType: \"link\",\n          link: {\n            messageUrl,\n            picUrl,\n            title,\n            text,\n          },\n        },\n      }\n      props.onClick(params)\n    })\n  }\n\n  return (\n    <div>\n      <a onClick={props.onClose}>←返回</a>\n      <br />\n      <br />\n      <h4 className=\"title\">创建群消息</h4>\n      <Form form={form} onFinish={onSubmit}>\n        <Form.Item\n          label=\"群名称\"\n          name=\"name\"\n          rules={[{ required: true, message: \"群名称必填\" }]}\n        >\n          <Input placeholder=\"请输入群名称\" />\n        </Form.Item>\n        <Form.Item\n          label=\"消息标题\"\n          name=\"title\"\n          rules={[{ required: true, message: \"消息标题必填\" }]}\n        >\n          <Input placeholder=\"请输入消息标题\" />\n        </Form.Item>\n        <Form.Item\n          label=\"消息内容\"\n          name=\"text\"\n          rules={[{ required: true, message: \"消息内容必填\" }]}\n        >\n          <Input placeholder=\"请输入消息内容\" />\n        </Form.Item>\n        <Form.Item\n          label=\"消息链接\"\n          name=\"messageUrl\"\n          rules={[{ required: true, message: \"消息链接必填\" }]}\n        >\n          <Input placeholder=\"请输入消息链接\" />\n        </Form.Item>\n        <Form.Item\n          label=\"消息图片\"\n          name=\"file\"\n          rules={[{ required: true, message: \"消息图片必填\" }]}\n        >\n          <Upload\n            listType=\"picture-card\"\n            className=\"avatar-uploader\"\n            showUploadList={false}\n            action=\"/upload\"\n            beforeUpload={beforeUpload}\n            onChange={handleChange}\n            style={{ overflow: \"hidden\" }}\n          >\n            {imageUrl ? (\n              <img src={imageUrl} alt=\"avatar\" style={{ width: \"100%\" }} />\n            ) : (\n              uploadButton\n            )}\n          </Upload>\n        </Form.Item>\n        <Form.Item\n          label=\"选择发送人\"\n          name=\"userIdList\"\n          rules={[{ required: true, message: \"发送人必选\" }]}\n        >\n          <Checkbox.Group>\n            {props.userIdList.map((item, i) => (\n              <div key={\"userid\" + i}>\n                <Checkbox value={item.userId} name={item.name}>\n                  {item.name}\n                </Checkbox>\n              </div>\n            ))}\n          </Checkbox.Group>\n        </Form.Item>\n        <Button htmlType=\"submit\" type=\"primary\">\n          提交\n        </Button>\n      </Form>\n    </div>\n  )\n}\n\nexport default Group\n","import react from \"react\"\nimport { Table } from \"antd\"\n\nconst ReadedUsers = (props) => {\n  const column = [\n    {\n      title: \"用户id\",\n      dataIndex: \"userId\",\n      key: \"userId\",\n    },\n  ]\n  return (\n    <div>\n      <a onClick={props.onClose}>←返回</a>\n      <br />\n      <br />\n      <Table columns={column} dataSource={props.readedUserList} />\n    </div>\n  )\n}\n\nexport default ReadedUsers\n","import react, { useEffect, useState } from \"react\"\nimport \"./App.css\"\nimport axios from \"axios\"\nimport * as dd from \"dingtalk-jsapi\"\nimport { Button, message } from \"antd\"\nimport Group from \"./components/Group\"\nimport ReadedUsers from \"./components/ReadedUsers\"\nimport \"antd/dist/antd.min.css\"\n\n//内网穿透工具介绍:\n// https://developers.dingtalk.com/document/resourcedownload/http-intranet-penetration?pnamespace=app\n// 替换成后端服务域名\nexport const domain = \"\"\n\nfunction App() {\n  const [showType, setShowType] = useState(0)\n  const [userIdList, setUserIdList] = useState([])\n  const [readedUserList, setReadedUserList] = useState([])\n  useEffect(() => {\n    dd.ready(function () {\n      let corpId\n      fetch(domain + \"/config\")\n        .then((res) => res.json())\n        .then((result) => {\n          corpId = result.data.corpId\n          // dd.ready参数为回调函数，在环境准备就绪时触发，jsapi的调用需要保证在该回调函数触发后调用，否则无效。\n          dd.runtime.permission.requestAuthCode({\n            corpId: corpId, //三方企业ID\n            onSuccess: function (result) {\n              axios\n                .get(domain + \"/login?authCode=\" + result.code)\n                .then((response) => {\n                  // 登录成功后储存用户部门和ID\n                  sessionStorage.setItem(\"userId\", response.data.data.userid)\n                  sessionStorage.setItem(\"unionId\", response.data.data.unionid)\n                  sessionStorage.setItem(\n                    \"deptId\",\n                    response.data.data.deptIdList[0]\n                  )\n                  message.success(\"登陆成功：\" + response.data.data.name)\n                  const qs = require(\"qs\")\n                  // 获取部门部门用户详情\n                  axios\n                    .get(domain + \"/users\", {\n                      params: {\n                        deptIds: response.data.data.deptIdList,\n                      },\n                      paramsSerializer: function (params) {\n                        return qs.stringify(params, { arrayFormat: \"repeat\" })\n                      },\n                    })\n                    .then((response) => {\n                      // 此处为创建人的userId，可以使用response里面返回的数据\n                      setUserIdList(response.data.data)\n                    })\n                    .catch((error) => {\n                      alert(JSON.stringify(error))\n                    })\n                })\n                .catch((error) => {\n                  alert(JSON.stringify(error))\n                })\n            },\n            onFail: function (err) {\n              alert(JSON.stringify(err))\n            },\n          })\n        })\n    })\n  }, [])\n\n  const sendGroupMessage = (data) => {\n    // 发送群消息\n    axios({\n      url: domain + \"/message/group\",\n      method: \"post\",\n      data: JSON.stringify(data),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then(function (response) {\n        if (response.data.success) {\n          message.success(\"发送群消息成功\")\n          setShowType(0)\n          sessionStorage.setItem(\"messageId\", response.data.data)\n        }\n      })\n      .catch(function (error) {\n        console.log(error)\n      })\n  }\n\n  const readUserList = async () => {\n    if (!sessionStorage.getItem(\"messageId\")) {\n      message.error(\"请先创建群消息\")\n      return\n    }\n    // 获取已读人员列表\n    axios\n      .get(domain + \"/message/group/\" + sessionStorage.getItem(\"messageId\"))\n      .then(function (response) {\n        setReadedUserList(response.data.data)\n      })\n      .catch(function (error) {\n        console.log(error)\n      })\n    await setShowType(2)\n  }\n\n  return (\n    <div className=\"content\">\n      <div className=\"header\">\n        <img\n          src=\"https://img.alicdn.com/imgextra/i3/O1CN01Mpftes1gwqxuL0ZQE_!!6000000004207-2-tps-240-240.png\"\n          className=\"headImg\"\n        />\n        钉钉模板\n      </div>\n\n      <div className=\"App\">\n        {showType === 1 && (\n          <Group\n            onClick={(params) => sendGroupMessage(params)}\n            userIdList={userIdList}\n            onClose={() => setShowType(0)}\n          />\n        )}\n        <div>\n          {!showType && (\n            <Button type=\"primary\" onClick={() => setShowType(1)}>\n              发送群消息\n            </Button>\n          )}\n          <br />\n          <br />\n          {!showType && (\n            <Button type=\"primary\" onClick={readUserList}>\n              查看已读人员列表\n            </Button>\n          )}\n        </div>\n        {showType === 2 && (\n          <div>\n            <ReadedUsers\n              readedUserList={readedUserList}\n              onClose={() => setShowType(0)}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}