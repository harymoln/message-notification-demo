{"version":3,"sources":["components/Group.js","App.js","reportWebVitals.js","index.js"],"names":["Group","props","Form","useForm","form","useState","loading","setLoading","imageUrl","setImageUrl","uploadButton","LoadingOutlined","PlusOutlined","style","marginTop","useEffect","className","onFinish","data","userId","sessionStorage","getItem","console","log","userIdList","messageUrl","title","text","file","params","owner","name","dingTalkMessage","msgType","link","picUrl","response","url","onClick","Item","label","placeholder","listType","showUploadList","action","headers","onChange","info","status","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","originFileObj","src","alt","width","map","item","i","value","htmlType","type","App","showType","setShowType","setUserIdList","dd","corpId","fetch","then","res","json","permission","requestAuthCode","onSuccess","axios","get","code","setItem","userid","unionid","deptIdList","qs","require","deptIds","paramsSerializer","stringify","arrayFormat","catch","error","alert","JSON","onFail","err","readUserList","a","method","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.edea0964.chunk.js","sourcesContent":["import react, { useEffect, useState } from \"react\"\nimport { Form, Input, Button, Checkbox, Upload, message } from \"antd\"\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\"\nimport { ImageUploader } from \"antd-mobile\"\nimport axios from \"axios\"\n\nfunction getBase64(img, callback) {\n  const reader = new FileReader()\n  reader.addEventListener(\"load\", () => callback(reader.result))\n  reader.readAsDataURL(img)\n}\n\n// function beforeUpload(file) {\n//   const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\"\n//   if (!isJpgOrPng) {\n//     message.error(\"You can only upload JPG/PNG file!\")\n//   }\n//   const isLt2M = file.size / 1024 / 1024 < 2\n//   if (!isLt2M) {\n//     message.error(\"Image must smaller than 2MB!\")\n//   }\n//   return isJpgOrPng && isLt2M\n// }\n\nconst uploadMedia = (data) => {\n  // 上传图片\n  // 发起会议\n  const domain = \"\"\n  axios({\n    url: domain + \"/upload\",\n    method: \"post\",\n    data: data,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  })\n    .then(function (response) {\n      // alert(JSON.stringify(response));\n      console.log(response)\n      sessionStorage.setItem(\"mediaId\", response.data.data)\n    })\n    .catch(function (error) {\n      console.log(error)\n    })\n}\n\nconst Group = (props) => {\n  const [form] = Form.useForm()\n  const [loading, setLoading] = useState(false)\n  const [imageUrl, setImageUrl] = useState(\"\")\n\n  const uploadButton = (\n    <div>\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\n      <div style={{ marginTop: 8 }}>Upload</div>\n    </div>\n  )\n  const handleChange = (info) => {\n    if (info.file.status === \"uploading\") {\n      setLoading(true)\n      return\n    }\n    if (info.file.status === \"done\") {\n      getBase64(info.file.originFileObj, (file) => {\n        setImageUrl(file)\n        setLoading(false)\n      })\n    }\n  }\n\n  useEffect(() => {\n    // form.setFieldsValue({\n    //   title: \"任务待办\",\n    //   url: \"/toWork\",\n    //   createTime: \"2021-07-05 16:00:00\",\n    //   formTitle: \"标题\",\n    //   formContent: \"内容\",\n    // })\n  }, [])\n\n  const onSubmit = (data) => {\n    const userId = sessionStorage.getItem(\"userId\")\n    console.log(data, \"-----\")\n    const { userIdList, messageUrl, title, text, file } = data\n    const picUrl = file?.file?.response?.url\n    const params = {\n      owner: userId,\n      name: \"群消息\",\n      userIdList,\n      dingTalkMessage: {\n        msgType: \"link\",\n        link: {\n          messageUrl,\n          picUrl,\n          title,\n          text,\n        },\n      },\n    }\n\n    props.onClick(params)\n  }\n\n  return (\n    <div>\n      <h4 className=\"title\">创建群消息</h4>\n      <Form form={form} onFinish={onSubmit}>\n        <Form.Item label=\"群名称\" name=\"name\">\n          <Input placeholder=\"请输入群名称\" />\n        </Form.Item>\n        <Form.Item label=\"消息标题\" name=\"title\">\n          <Input placeholder=\"请输入消息标题\" />\n        </Form.Item>\n        <Form.Item label=\"消息内容\" name=\"text\">\n          <Input placeholder=\"请输入消息内容\" />\n        </Form.Item>\n        <Form.Item label=\"消息链接\" name=\"messageUrl\">\n          <Input placeholder=\"请输入消息链接\" />\n        </Form.Item>\n        <Form.Item label=\"消息图片\" name=\"file\">\n          <Upload\n            listType=\"picture-card\"\n            className=\"avatar-uploader\"\n            showUploadList={false}\n            action=\"/upload\"\n            // https://www.mocky.io/v2/5cc8019d300000980a055e76\n            // beforeUpload={beforeUpload}\n            headers={{ \"Content-Type\": \"application/json\" }}\n            onChange={handleChange}\n          >\n            {imageUrl ? (\n              <img src={imageUrl} alt=\"avatar\" style={{ width: \"100%\" }} />\n            ) : (\n              uploadButton\n            )}\n          </Upload>\n        </Form.Item>\n        <Form.Item label=\"选择发送人\" name=\"userIdList\">\n          <Checkbox.Group>\n            {/* onChange={onChange} */}\n            {/*  [\n              { name: \"11111\", userid: \"22222\" },\n              { name: \"333\", userid: \"444\" },\n            ]*/}\n            {props.userIdList.map((item, i) => (\n              <div key={\"userid\" + i}>\n                <Checkbox value={item.userId} name={item.name}>\n                  {item.name}\n                </Checkbox>\n              </div>\n            ))}\n          </Checkbox.Group>\n        </Form.Item>\n        <Button htmlType=\"submit\" type=\"primary\">\n          提交\n        </Button>\n      </Form>\n    </div>\n  )\n}\n\nexport default Group\n","import react, { useEffect, useState } from \"react\"\nimport \"./App.css\"\nimport axios from \"axios\"\nimport * as dd from \"dingtalk-jsapi\"\nimport { Button } from \"antd\"\nimport Group from \"./components/Group\"\nimport \"antd/dist/antd.min.css\"\n\n//内网穿透工具介绍:\n// https://developers.dingtalk.com/document/resourcedownload/http-intranet-penetration?pnamespace=app\n// 替换成后端服务域名\nexport const domain = \"\"\n\nfunction App() {\n  const [showType, setShowType] = useState(0)\n  const [userIdList, setUserIdList] = useState([])\n  useEffect(() => {\n    // return\n    dd.ready(function () {\n      // let corpId;\n      // axios.get(domain + \"/config\")\n      //     .then(response => {\n      //         corpId = response.data.corpId;\n      //     })\n      //     .catch(error => {\n      //         alert(JSON.stringify(error))\n      //         // console.log(error.message)\n      //     })\n      let corpId\n      fetch(domain + \"/config\")\n        .then((res) => res.json())\n        .then((result) => {\n          // alert(JSON.stringify(result));\n          corpId = result.data.corpId\n          // dd.ready参数为回调函数，在环境准备就绪时触发，jsapi的调用需要保证在该回调函数触发后调用，否则无效。\n          dd.runtime.permission.requestAuthCode({\n            corpId: corpId, //三方企业ID\n            onSuccess: function (result) {\n              // alert(JSON.stringify(result));\n              axios\n                .get(domain + \"/login?authCode=\" + result.code)\n                .then((response) => {\n                  // alert(JSON.stringify(response));\n                  // alert(JSON.stringify(response.data));\n                  // alert(JSON.stringify(response.data.data.userid));\n                  // alert(JSON.stringify(response.data.data.deptIdList[0]));\n                  // 登录成功后储存用户部门和ID\n                  sessionStorage.setItem(\"userId\", response.data.data.userid)\n                  sessionStorage.setItem(\"unionId\", response.data.data.unionid)\n                  sessionStorage.setItem(\n                    \"deptId\",\n                    response.data.data.deptIdList[0]\n                  )\n                  const qs = require(\"qs\")\n                  // 获取部门部门用户详情\n                  axios\n                    .get(domain + \"/users\", {\n                      params: {\n                        deptIds: response.data.data.deptIdList,\n                      },\n                      paramsSerializer: function (params) {\n                        return qs.stringify(params, { arrayFormat: \"repeat\" })\n                      },\n                    })\n                    .then((response) => {\n                      console.log(response)\n                      // 此处为创建人的userId，可以使用response里面返回的数据\n                      //   sessionStorage.setItem(\n                      //     \"userIdList\",\n                      //     sessionStorage.getItem(\"userId\")\n                      //   )\n                      setUserIdList(response.data.data)\n                    })\n                    .catch((error) => {\n                      alert(JSON.stringify(error))\n                    })\n                })\n                .catch((error) => {\n                  alert(JSON.stringify(error))\n                  // console.log(error.message)\n                })\n            },\n            onFail: function (err) {\n              alert(JSON.stringify(err))\n            },\n          })\n        })\n    })\n  }, [])\n\n  //   const uploadMedia = () => {\n  //     // 上传图片\n  //     const data = {}\n  //     // 发起会议\n  //     axios({\n  //       url: domain + \"/upload\",\n  //       method: \"post\",\n  //       data: data,\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //     })\n  //       .then(function (response) {\n  //         // alert(JSON.stringify(response));\n  //         console.log(response)\n  //         sessionStorage.setItem(\"mediaId\", response.data.data)\n  //       })\n  //       .catch(function (error) {\n  //         console.log(error)\n  //       })\n  //   }\n\n  const sendGroupMessage = (data) => {\n    // 发送群消息\n    // const userId = sessionStorage.getItem(\"userId\")\n    // demo直接构建了要请求的数据，实际开发需要从页面获取\n    // let url = \"https://www.dingtalk.com\"\n    // {\n    //     owner: userId,\n    //     name: \"群消息\",\n    //     userIdList,\n    //     dingTalkMessage: {\n    //       msgType: \"link\",\n    //       link: {\n    //         messageUrl,\n    //         picUrl,\n    //         title,\n    //         text,\n    //       },\n    //     },\n    //   }\n    // const data = {\n    //   owner: userId,\n    //   name: \"群消息\",\n    //   userIdList: [userIdList],\n    //   dingTalkMessage: {\n    //     msgType: \"link\",\n    //     link: {\n    //       messageUrl:\n    //         \"dingtalk://dingtalkclient/page/link?url=\" +\n    //         encodeURIComponent(url) +\n    //         \"&pc_slide=true\",\n    //       picUrl: sessionStorage.getItem(\"mediaId\"),\n    //       title: \"测试\",\n    //       text: \"测试\",\n    //     },\n    //   },\n    // }\n    // 发送群消息\n    axios({\n      url: domain + \"/message/group\",\n      method: \"post\",\n      data: JSON.stringify(data),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then(function (response) {\n        // alert(JSON.stringify(response));\n        setShowType(false)\n        console.log(response)\n        sessionStorage.setItem(\"messageId\", response.data.data)\n      })\n      .catch(function (error) {\n        console.log(error)\n      })\n  }\n\n  const readUserList = async () => {\n    // 获取已读人员列表\n    axios\n      .get(domain + \"/message/group/\" + sessionStorage.getItem(\"messageId\"))\n      .then(function (response) {\n        setUserIdList(response.data.data)\n        alert(JSON.stringify(response.data.data))\n      })\n      .catch(function (error) {\n        console.log(error)\n      })\n    await setShowType(2)\n  }\n\n  return (\n    <div className=\"App\">\n      {/*<header className=\"App-header\">*/}\n      {/*<button onClick={createMeeting}>领用并提交审批</button>*/}\n      {/*</header>*/}\n      {showType === 1 && (\n        <Group\n          onClick={(params) => sendGroupMessage(params)}\n          userIdList={userIdList}\n        />\n      )}\n      <header className=\"App-header\">\n        {/* <Button onClick={uploadMedia}>上传媒体文件</Button> */}\n        {!showType && (\n          <Button type=\"primary\" onClick={() => setShowType(1)}>\n            发送群消息\n          </Button>\n        )}\n        {!showType && (\n          <Button type=\"primary\" onClick={readUserList}>\n            查看已读人员列表\n          </Button>\n        )}\n      </header>\n      {/*<div className=\"container\">*/}\n      {/*    <List/>*/}\n      {/*</div>*/}\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}